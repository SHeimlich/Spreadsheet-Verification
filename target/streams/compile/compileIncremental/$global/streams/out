[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\sarah\Spreadsheet-Verification\src\main\scala\Rats.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParser.java, C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParserPrettyPrinter.scala, C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParserSyntax.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(syntax.ExpParserSyntax.Add, syntax.ExpParserSyntax.Sub, syntax.ExpParserSyntax.ifAssign, syntax.ExpParser.Chunk3, syntax.ExpParserSyntax.and, syntax.ExpParserSyntax.Ref, syntax.ExpParserSyntax.NumFormula, syntax.ExpParserSyntax.Arr, syntax.ExpParserSyntax.strConst, syntax.ExpParserSyntax.Mul, syntax.ExpParserSyntax.great, syntax.ExpParserSyntax.numIF, syntax.ExpParserSyntax.ifStmt, syntax.ExpParserSyntax.stmts, syntax.ExpParserSyntax.Div, syntax.ExpParserSyntax.Boo, syntax.ExpParserSyntax.greatEqual, syntax.ExpParserSyntax.SUM, syntax.ExpParserSyntax.AVERAGE, syntax.ExpParserSyntax.assignIf, syntax.ExpParserSyntax, syntax.ExpParserSyntax.pow, syntax.ExpParserSyntax.stmt, syntax.ExpParserSyntax.NumArguments, syntax.ExpParserSyntax.sf, syntax.ExpParserSyntax.Arg, syntax.ExpParserSyntax.nf, syntax.ExpParserSyntax.Assign, syntax.ExpParserSyntax.NumAsStr, syntax.ExpParserSyntax.Args, syntax.ExpParserSyntax.less, syntax.ExpParserPrettyPrinter, syntax.ExpParserSyntax.Cell, syntax.ExpParserSyntax.StringFormula, syntax.ExpParserSyntax.Exp, syntax.ExpParserSyntax.Num, syntax.ExpParserSyntax.lessEqual, syntax.ExpParserSyntax.ASTNode, syntax.ExpParserSyntax.equal, syntax.ExpParserSyntax.Formula)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(syntax.ExpParserSyntax.Add, syntax.ExpParserSyntax.Sub, syntax.ExpParserSyntax.ifAssign, syntax.ExpParser.Chunk3, syntax.ExpParserSyntax.and, syntax.ExpParserSyntax.Ref, syntax.ExpParserSyntax.NumFormula, syntax.ExpParserSyntax.Arr, syntax.ExpParserSyntax.strConst, syntax.ExpParserSyntax.Mul, syntax.ExpParserSyntax.great, syntax.ExpParserSyntax.numIF, syntax.ExpParserSyntax.ifStmt, syntax.ExpParserSyntax.stmts, syntax.ExpParserSyntax.Div, syntax.ExpParserSyntax.Boo, syntax.ExpParserSyntax.greatEqual, syntax.ExpParserSyntax.SUM, syntax.ExpParserSyntax.AVERAGE, syntax.ExpParserSyntax.assignIf, syntax.ExpParserSyntax, syntax.ExpParserSyntax.pow, syntax.ExpParserSyntax.stmt, syntax.ExpParserSyntax.NumArguments, syntax.ExpParserSyntax.sf, syntax.ExpParserSyntax.Arg, syntax.ExpParserSyntax.nf, syntax.ExpParserSyntax.Assign, syntax.ExpParserSyntax.NumAsStr, syntax.ExpParserSyntax.Args, syntax.ExpParserSyntax.less, syntax.ExpParserPrettyPrinter, syntax.ExpParserSyntax.Cell, syntax.ExpParserSyntax.StringFormula, syntax.ExpParserSyntax.Exp, syntax.ExpParserSyntax.Num, syntax.ExpParserSyntax.lessEqual, syntax.ExpParserSyntax.ASTNode, syntax.ExpParserSyntax.equal, syntax.ExpParserSyntax.Formula)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParser.java, C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParserPrettyPrinter.scala, C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\src_managed\main\sbt-rats\syntax\ExpParserSyntax.scala)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 2 Scala sources and 1 Java source to C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 776ffc1e for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-feature[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\sarah\.ivy2\cache\org.scala-lang\scala-library\jars\scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Users\sarah\Spreadsheet-Verification\target\scala-2.12\classes;C:\Users\sarah\.ivy2\cache\xtc\rats\jars\rats-2.3.1.jar;C:\Users\sarah\.ivy2\cache\junit\junit\jars\junit-4.8.2.jar;C:\Users\sarah\.ivy2\cache\org.bitbucket.inkytonik.kiama\kiama_2.12\jars\kiama_2.12-2.2.0.jar;C:\Users\sarah\.ivy2\cache\com.google.guava\guava\bundles\guava-24.1-jre.jar;C:\Users\sarah\.ivy2\cache\com.google.code.findbugs\jsr305\jars\jsr305-1.3.9.jar;C:\Users\sarah\.ivy2\cache\org.checkerframework\checker-compat-qual\jars\checker-compat-qual-2.0.0.jar;C:\Users\sarah\.ivy2\cache\com.google.errorprone\error_prone_annotations\jars\error_prone_annotations-2.1.3.jar;C:\Users\sarah\.ivy2\cache\com.google.j2objc\j2objc-annotations\jars\j2objc-annotations-1.1.jar;C:\Users\sarah\.ivy2\cache\org.codehaus.mojo\animal-sniffer-annotations\jars\animal-sniffer-annotations-1.14.jar;C:\Users\sarah\.ivy2\cache\org.bitbucket.inkytonik.dsinfo\dsinfo_2.12\jars\dsinfo_2.12-0.4.0.jar;C:\Users\sarah\.ivy2\cache\org.scala-lang\scala-reflect\jars\scala-reflect-2.12.8.jar;C:\Users\sarah\.ivy2\cache\org.bitbucket.inkytonik.dsprofile\dsprofile_2.12\jars\dsprofile_2.12-0.4.0.jar;C:\Users\sarah\.ivy2\cache\org.bitbucket.inkytonik.kiama\kiama-extras_2.12\jars\kiama-extras_2.12-2.2.0.jar;C:\Users\sarah\.ivy2\cache\org.rogach\scallop_2.12\jars\scallop_2.12-3.1.2.jar;C:\Users\sarah\.ivy2\cache\jline\jline\jars\jline-2.15-SNAPSHOT.jar;C:\Users\sarah\.ivy2\cache\org.scala-graph\graph-constrained_2.12\jars\graph-constrained_2.12-1.12.3.jar;C:\Users\sarah\.ivy2\cache\org.scala-graph\graph-core_2.12\jars\graph-core_2.12-1.12.3.jar;C:\Users\sarah\.ivy2\cache\org.jopendocument\jOpenDocument\jars\jOpenDocument-1.3.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.238967959 s[0m
[0m[[0m[0mdebug[0m] [0m[0mAttempting to call com.sun.tools.javac.api.JavacTool@374d0a9b directly...[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation took 0.555285505 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava analysis took 0.043571953 s[0m
[0m[[0m[0mdebug[0m] [0m[0mJava compilation + analysis took 0.61067562 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from syntax.ExpParserSyntax.ifAssign...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(syntax.ExpParserSyntax.ifAssign)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(syntax.ExpParserSyntax.ifAssign)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of syntax.ExpParserPrettyPrinter: Set(UsedName(ifRefs,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(syntax.ExpParserSyntax.ifAssign,ModifiedNames(changes = UsedName(syntax;ExpParserSyntax;ifAssign;init;,[Default]), UsedName(rows,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(ifRefs,[Default]))) invalidates 2 classes due to The syntax.ExpParserSyntax.ifAssign has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(syntax;ExpParserSyntax;ifAssign;init;,[Default]), UsedName(rows,[Default]), UsedName(apply,[Default]), UsedName(copy,[Default]), UsedName(ifRefs,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(syntax.ExpParserSyntax.ifAssign)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(syntax.ExpParserPrettyPrinter)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from syntax.ExpParser.Chunk3...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(syntax.ExpParser.Chunk3)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(syntax.ExpParser.Chunk3)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(syntax.ExpParser.Chunk3,ModifiedNames(changes = UsedName(fWord,[Default]))) invalidates 1 classes due to The syntax.ExpParser.Chunk3 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(fWord,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(syntax.ExpParser.Chunk3)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(syntax.ExpParserPrettyPrinter)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(syntax.ExpParserPrettyPrinter)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding ruMain by syntax.ExpParserPrettyPrinter[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
