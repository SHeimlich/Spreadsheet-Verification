module syntax.ExpParser;

header {
    import syntax.ExpParserSyntax.*;
}

option verbose;

Program =
    Exp*.

Exp {paren} =
    Assign.

Assign : Exp =
  Cell sp "=" Formula ",".

Formula =
    "SUM(" + Arguments + ")"    {SUM}
    | Formula "+" Formula             {Add, left, 2}
    | Formula "-" Formula           {Sub, left, 2}
    | Formula "*" Formula           {Mul, left, 1}
    | Formula "/" Formula           {Div, left, 1}
    | Formula "^" Formula        {pow, left, 3}
    | Formula "&" Formula        {and, left, 3}
    | Formula "<" Formula        {less, left, 3}
    | Formula ">" Formula        {great, left, 3}
    | Formula "=" Formula        {equal, left, 3}
    | Formula "<=" Formula       {lessEqual, left, 3}
    | Formula ">=" Formula       {greatEqual, left, 3}
    | Reference                  {R, none, 4}
    | Constant                   {C, none, 5}
    | '(' Formula ')'.

Arguments =
    Argument ";" Arguments       {Args}
  | ArrayVec                     {AV}
  | Formula                    {Arg}.

Argument =
   Formula.

Reference  =
  Array
  | CellRef.


Constant : Formula =
    Integer     {Num}
  | Letters     {S}
  | Bool        {Boo}.


Array : Reference =
    CellRef ":" CellRef         {Arr}.

ArrayVec : Reference =
    CellRef+.

CellRef : Reference =
  "[." Cell "]"      {Ref}.

Cell : String =
  Letters Digits.

Integer : String =
  Digits Spacing.

Digits : String =
  Digit+.

Digit : String =
  [0-9].

Letters : String =
  Letter+.

Letter : String =
  [A-Z].

Bool : String =
    'false'
  | 'true'.