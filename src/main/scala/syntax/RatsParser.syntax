module syntax.ExpParser;

header {
    import syntax.ExpParserSyntax.*;
}

Program =
    Exp*.

Exp {paren} =
    Assign.

Stmt =
  Stmt sp BinOp Stmt   {Form, left, 1}
  | CellRef             {Use}
  | Integer            {Num, 1: Integer.parseInt : Int}
  | '(' Stmt ')'.

Assign : Exp =
  Cell sp "=" Stmt ",".


BinOp =
     "+"        {add}
  |  "-"        {sub}
  |  "*"        {mult}
  |  "/"        {div}
  |  "^"        {pow}
  |  "&"        {and}
  |  "<"        {less}
  |  ">"        {great}
  |  "="        {equal}
  |  "<="       {lessEqual}
  |  ">="       {greatEqual}
  |  "<>"       {lessGreat}.

CellRef : String =
  "[" Cell "]".

Cell : String =
  Letters Digits.

Integer : String =
  Digits Spacing.

Digits : String =
  Digit+.

Digit : String =
  [0-9].

Letters : String =
  Letter+.

Letter : String =
  [A-Z].